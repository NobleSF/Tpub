# Generated by Django 2.1.7 on 2019-05-30 09:51

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trello', '0001_initial'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('unpublished_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('unpublished_at', models.DateTimeField(blank=True, null=True)),
                ('background_src', models.URLField(blank=True, null=True)),
                ('logo_src', models.URLField(blank=True, null=True)),
                ('_title', models.CharField(blank=True, max_length=128, null=True)),
                ('_description', models.TextField(blank=True, default='')),
                ('show_skibi_credits', models.BooleanField(default=True)),
                ('footer_text', models.TextField(blank=True, default='')),
                ('site', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog', to='sites.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=128)),
                ('href', models.URLField()),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='blog.Blog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('static_dir_name', models.CharField(max_length=100, unique=True)),
                ('license_href', models.URLField()),
                ('js_href', models.URLField()),
                ('css_href', models.URLField()),
                ('live', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('unpublished_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default='')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='blog.Blog')),
                ('trello_label', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='topic', to='trello.Label')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='theme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='blogs', to='blog.Theme'),
        ),
        migrations.AddField(
            model_name='blog',
            name='trello_board',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='blog', to='trello.Board'),
        ),
        migrations.AddField(
            model_name='article',
            name='blog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='blog.Blog'),
        ),
        migrations.AddField(
            model_name='article',
            name='trello_card',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='article', to='trello.Card'),
        ),
    ]
