# Generated by Django 3.0.6 on 2020-06-05 07:13

from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0002_auto_20200602_1634'),
        ('shop', '0010_auto_20200605_0617'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemAddonGroupMemberships',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_never_free', models.BooleanField(default=False)),
                ('addon_price_currency', djmoney.models.fields.CurrencyField(choices=[('THB', 'Baht')], default='THB', editable=False, max_length=3)),
                ('addon_price', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, default_currency='THB', help_text='price when not automatically free', max_digits=8, null=True)),
                ('addon_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_addon_group_memberships', to='shop.AddonGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemAddonGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('addon_max_count', models.SmallIntegerField(blank=True, help_text='maxiumum number of addons allowed (eg. 10 salad toppings)', null=True)),
                ('addon_free_count', models.SmallIntegerField(blank=True, help_text='number of free addons allowed (eg. 1 for salad dressing)', null=True)),
                ('standard_price_currency', djmoney.models.fields.CurrencyField(choices=[('THB', 'Baht')], default='THB', editable=False, max_length=3)),
                ('standard_price', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, default_currency='THB', help_text='set price for all extra addons (eg. all toppings are $1 extra each)', max_digits=8, null=True)),
                ('addon_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_addon_groups', to='shop.AddonGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='itemaddongroup',
            name='addon_group',
        ),
        migrations.RemoveField(
            model_name='itemaddongroup',
            name='item',
        ),
        migrations.RemoveField(
            model_name='itemaddongroup',
            name='notes',
        ),
        migrations.AddField(
            model_name='historicalitem',
            name='calories_count',
            field=models.PositiveIntegerField(blank=True, help_text='amount of calories in this menu item', null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='calories_count',
            field=models.PositiveIntegerField(blank=True, help_text='amount of calories in this menu item', null=True),
        ),
        migrations.AddField(
            model_name='menusection',
            name='description',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.DeleteModel(
            name='Addon',
        ),
        migrations.DeleteModel(
            name='ItemAddonGroup',
        ),
        migrations.AddField(
            model_name='itemaddongroups',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_addon_groups', to='shop.Item'),
        ),
        migrations.AddField(
            model_name='itemaddongroups',
            name='notes',
            field=models.ManyToManyField(blank=True, to='common.Note'),
        ),
        migrations.AddField(
            model_name='itemaddongroupmemberships',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_addon_group_memberships', to='shop.Item'),
        ),
        migrations.AddField(
            model_name='itemaddongroupmemberships',
            name='notes',
            field=models.ManyToManyField(blank=True, to='common.Note'),
        ),
        migrations.AddField(
            model_name='item',
            name='groups_as_addon',
            field=models.ManyToManyField(blank=True, help_text='types of addons this can be (eg. mushrooms as a pizza topping)', related_name='member_addon_items', through='shop.ItemAddonGroupMemberships', to='shop.AddonGroup'),
        ),
        migrations.AddField(
            model_name='item',
            name='groups_of_addons',
            field=models.ManyToManyField(blank=True, help_text='types of addons that can be added (eg. salad dressings, toppings)', related_name='items_as_addon_group', through='shop.ItemAddonGroups', to='shop.AddonGroup'),
        ),
    ]
