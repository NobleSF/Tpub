# Generated by Django 3.0.6 on 2020-06-05 06:17

from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import timezone_field.fields


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0002_auto_20200602_1634'),
        ('shop', '0009_auto_20200603_1123'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddonGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_at', models.DateTimeField(blank=True, null=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('unpublished_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=140)),
                ('description', models.TextField(blank=True, default='')),
                ('image', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addon_group', to='common.Image')),
                ('notes', models.ManyToManyField(blank=True, to='common.Note')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemAddonGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('addon_max_count', models.SmallIntegerField(blank=True, help_text='maxiumum number of addons allowed (eg. 10 salad toppings)', null=True)),
                ('addon_free_count', models.SmallIntegerField(blank=True, help_text='number of free addons allowed (eg. 1 for salad dressing)', null=True)),
                ('standard_price_currency', djmoney.models.fields.CurrencyField(choices=[('THB', 'Baht')], default='THB', editable=False, max_length=3)),
                ('standard_price', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, default_currency='THB', help_text='set price for all extra addons (eg. all toppings are $1 extra each)', max_digits=8, null=True)),
                ('addon_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_addon_groups', to='shop.AddonGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='addon',
            name='addon_type',
        ),
        migrations.RemoveField(
            model_name='historicalitem',
            name='is_addon',
        ),
        migrations.RemoveField(
            model_name='item',
            name='addon_types',
        ),
        migrations.RemoveField(
            model_name='item',
            name='is_addon',
        ),
        migrations.RemoveField(
            model_name='item',
            name='items_for_addon',
        ),
        migrations.AddField(
            model_name='historicalshop',
            name='timezone',
            field=timezone_field.fields.TimeZoneField(blank=True),
        ),
        migrations.AddField(
            model_name='shop',
            name='timezone',
            field=timezone_field.fields.TimeZoneField(blank=True),
        ),
        migrations.DeleteModel(
            name='AddonType',
        ),
        migrations.AddField(
            model_name='itemaddongroup',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_addon_groups', to='shop.Item'),
        ),
        migrations.AddField(
            model_name='itemaddongroup',
            name='notes',
            field=models.ManyToManyField(blank=True, to='common.Note'),
        ),
        migrations.AddField(
            model_name='addon',
            name='addon_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addons', to='shop.AddonGroup'),
        ),
    ]
